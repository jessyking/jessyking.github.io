<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mess Up</title>
  
  
  <link href="https://doreality.github.io/atom.xml" rel="self"/>
  
  <link href="https://doreality.github.io/"/>
  <updated>2021-03-09T08:11:48.992Z</updated>
  <id>https://doreality.github.io/</id>
  
  <author>
    <name>doreality</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>同一主机下使用多个的GitHub账号搭建Hexo博客</title>
    <link href="https://doreality.github.io/2021-03-08-blog-around/%E5%90%8C%E4%B8%80%E4%B8%BB%E6%9C%BA%E4%B8%8B%E4%BD%BF%E7%94%A8%E5%A4%9A%E4%B8%AA%E7%9A%84GitHub%E8%B4%A6%E5%8F%B7%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2.html"/>
    <id>https://doreality.github.io/2021-03-08-blog-around/%E5%90%8C%E4%B8%80%E4%B8%BB%E6%9C%BA%E4%B8%8B%E4%BD%BF%E7%94%A8%E5%A4%9A%E4%B8%AA%E7%9A%84GitHub%E8%B4%A6%E5%8F%B7%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2.html</id>
    <published>2021-03-08T12:37:54.000Z</published>
    <updated>2021-03-09T08:11:48.992Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在一台电脑，一个 GitHub 账号的情况下，来搭建 Hexo 博客，只需要按照<a href="https://doreality.github.io/2021-03-08-blog-around/%E7%AC%ACN%E6%AC%A1%EF%BC%9A%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%88%B0GitHub.html">第N次：从零搭建Hexo博客并部署到GitHub</a>中所述，马上就可以解决。</p><p>可是……我又有了一个新的 GitHub 账号，还是这台电脑，要在新账号上搭建一个新的博客（也就是说，要在一台电脑上同时操作两个GitHub账号），就要解决不同的SSH下的远程连接的问题。</p><span id="more"></span><p>在这里，默认已经学会了一台电脑一个账号的情况下，搭建 Hexo 博客的方法。</p><p>假设：</p><ul><li>旧 GitHub 账号，简称 <strong>old</strong>，邮箱：<a href="mailto:&#111;&#108;&#100;&#64;&#101;&#120;&#x61;&#x6d;&#x70;&#x6c;&#x65;&#x2e;&#x63;&#111;&#x6d;">&#111;&#108;&#100;&#64;&#101;&#120;&#x61;&#x6d;&#x70;&#x6c;&#x65;&#x2e;&#x63;&#111;&#x6d;</a></li><li>新 GitHub 账号，简称 <strong>new</strong>，邮箱：<a href="mailto:&#x6e;&#101;&#119;&#x40;&#x65;&#120;&#97;&#109;&#x70;&#108;&#101;&#x2e;&#x63;&#111;&#x6d;">&#x6e;&#101;&#119;&#x40;&#x65;&#120;&#97;&#109;&#x70;&#108;&#101;&#x2e;&#x63;&#111;&#x6d;</a></li></ul><p>在 <strong>old</strong> 已经搭建了 Hexo 的情况下：</p><ul><li><p>git 已经进行过如下设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">&quot;old&quot;</span></span><br><span class="line">$ git config --global user.email <span class="string">&quot;old@example.com&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>在用户目录的<code>.ssh</code>路径下默认配置了 old 账号的 SSH（敲了三个回车），其中私钥的文件名是id_rsa，公钥文件名是id_rsa.pub。</p></li></ul><p>我需要做两件事：</p><ul><li>部署 <strong>new</strong> 账号的 SSH；</li><li>利用 <strong>new</strong> 的 SSH，将新博客部署到 <strong>new</strong> 账号的 new.github.io 仓库。</li></ul><h2 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h2><h3 id="一、建立-new-账号的-Hexo-博客"><a href="#一、建立-new-账号的-Hexo-博客" class="headerlink" title="一、建立 new 账号的 Hexo 博客"></a>一、建立 new 账号的 Hexo 博客</h3><p>此处为大致步骤，详细请见<a href="https://doreality.github.io/2021-03-08-blog-around/%E7%AC%ACN%E6%AC%A1%EF%BC%9A%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%88%B0GitHub.html">第N次：从零搭建Hexo博客</a>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>此处<code>&lt;folder&gt;</code>假设为<code>new_blog</code>，下面会用到。</p><h3 id="二、-多账号分别建立SSH和Git连接"><a href="#二、-多账号分别建立SSH和Git连接" class="headerlink" title="二、 多账号分别建立SSH和Git连接"></a><a id="part2">二、 多账号分别建立SSH和Git连接</a></h3><h3 id="部署-SSH"><a href="#部署-SSH" class="headerlink" title="部署 SSH"></a>部署 SSH</h3><p>SSH 用于本地主机和远程服务器交流，对账户和密码进行加密，直接在本机上生成即可。</p><p>本部分的操作在用户目录的<code>.ssh</code>目录下，使用<code>git bash</code>运行命令行。</p><h4 id="1-创建-SSH-key"><a href="#1-创建-SSH-key" class="headerlink" title="1. 创建 SSH key"></a>1. 创建 SSH key</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;new@example.com&quot;</span> -f <span class="string">&quot;id_rsa_new&quot;</span></span><br></pre></td></tr></table></figure><p>第一个引号中，填写 GitHub 的账号地址；<br>第二个引号中，自定义填写，不能默认，否则会覆盖之前已经存在的<code>id_rsa</code>和<code>id_rsa.pub</code>。</p><p>之后，敲两次回车，默认即可。</p><h4 id="2-添加私钥"><a href="#2-添加私钥" class="headerlink" title="2. 添加私钥"></a>2. 添加私钥</h4><p>由于使用 SSH 时，默认使用<code>id_rsa</code>的私钥，所以要把新建的私钥添加到系统中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-agent bash</span><br><span class="line">$ ssh-add ~/.ssh/rsa_name</span><br></pre></td></tr></table></figure><p>此时提示<code>Identity added:……</code>即完成。</p><h4 id="3-设置-SSH-config"><a href="#3-设置-SSH-config" class="headerlink" title="3. 设置 SSH config"></a>3. 设置 SSH config</h4><p>依旧在<code>.ssh</code>路径下，新建config文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ touch config</span><br></pre></td></tr></table></figure><p>打开config文件（用文本编辑器），输入以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host          newgithub # 名称，自定义，会影响后续指令，用于连接 GitHub 仓库</span><br><span class="line">HostName      github.com # 主机名，用于 GitHub 连接的 SSH，HostName 必须是“github.com&quot;</span><br><span class="line">User          newgit # 用户名，自己决定</span><br><span class="line">IdentityFile  C:\Users\Administrater\.ssh\id_rsa_new # 刚才新建的 rsa 私钥路径，具体看文件夹中路径</span><br></pre></td></tr></table></figure><p>注意，对于默认生成的 SSH，<code>Host</code>条目的默认值是<code>github.com</code>，所以不要使用，会冲突。<br>此外，如果是用于别的服务器连接，HostName 可以是其他的域名，例如：gitgee.com 等。</p><h4 id="4-部署-SSH-到-GitHub"><a href="#4-部署-SSH-到-GitHub" class="headerlink" title="4. 部署 SSH 到 GitHub"></a>4. 部署 SSH 到 GitHub</h4><p>用文本编辑器打开<code>id_rsa_new.pub</code>，复制公钥内容。<br>打开 new GitHub 账号 - 右上角头像 - Settings - SSH and GPG Keys 页面，新建一个 SSH 条目，Title 自定义，Key 处粘贴公钥。</p><h4 id="5-远程测试"><a href="#5-远程测试" class="headerlink" title="5. 远程测试"></a>5. 远程测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@newgithub <span class="comment"># @后面是3.中Host的名字</span></span><br></pre></td></tr></table></figure><p>显示<code>You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code>说明设置成功。</p><p>至此，new 的 SSH 的部署完成。</p><h3 id="三、部署到-new-GitHub"><a href="#三、部署到-new-GitHub" class="headerlink" title="三、部署到 new GitHub"></a>三、部署到 new GitHub</h3><p>接下来，就要把新的 hexo 博客部署到相应的 new GitHub账号了。</p><h4 id="1-修改-deploy-设置"><a href="#1-修改-deploy-设置" class="headerlink" title="1. 修改 deploy 设置"></a>1. 修改 deploy 设置</h4><p>如下设置<code>new_blog</code>目录下的<code>_config.yml</code>即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@newgithub:new&#x2F;new.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>注意：@的后面是设置 SSH 时的 Host，并且不要忘记最末尾的<code>.git</code>。</p><h4 id="2-添加-hexo-的-git-部署工具"><a href="#2-添加-hexo-的-git-部署工具" class="headerlink" title="2. 添加 hexo 的 git 部署工具"></a>2. 添加 hexo 的 git 部署工具</h4><p>在<code>new_blog</code>目录中，右键打开<code>git bash</code>，添加<code>hexo-git-deployer</code>工具，用于部署：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git –-save</span><br></pre></td></tr></table></figure><h4 id="3-部署"><a href="#3-部署" class="headerlink" title="3. 部署"></a>3. 部署</h4><p>现在，就可以部署了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>此时，应该会成功部署到<strong>new</strong>账号的仓库中，但是上传的用户却是<strong>old</strong>用户。</p><p>原因是之前把<strong>old</strong>用户设置成了<code>global</code>全局权限，而 Hexo 博客在部署时，默认使用的是全局用户，所以操作时出现了问题。</p><p>如果不修改<code>global</code>权限，可以打开<code>new_blog/.deploy_git/.git</code>目录，在<code>config</code>文件中添加下面的内容即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[user]</span><br><span class="line">name &#x3D; new</span><br><span class="line">email &#x3D; new@example.com</span><br></pre></td></tr></table></figure><p>之后再对博客更新，就是<strong>new</strong>用户了。</p><h3 id="附：多-GitHub-账号的文件操作"><a href="#附：多-GitHub-账号的文件操作" class="headerlink" title="附：多 GitHub 账号的文件操作"></a>附：多 GitHub 账号的文件操作</h3><p>如果不是搭建博客，而是多个账号分别进行项目管理的话，大致思路是一样的。<br>首先，也要对新账号建立 SSH 的部署，见<a href="#part2">第二部分</a>。</p><p>如果要从远程仓库中下载原有的项目：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br><span class="line">$ git <span class="built_in">clone</span> git@newgithub:new/newproject.git</span><br></pre></td></tr></table></figure><p>@后面也要使用设置 SSH 时的 Host。</p><p>如果要新建项目：</p><h4 id="1-建立-git-仓库"><a href="#1-建立-git-仓库" class="headerlink" title="1. 建立 git 仓库"></a>1. 建立 git 仓库</h4><p>打开项目的目录，新建 git 仓库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h4 id="2-设置-git-config"><a href="#2-设置-git-config" class="headerlink" title="2. 设置 git config"></a>2. 设置 git config</h4><p>给仓库设置用户和邮箱，在提交时会用到。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name <span class="string">&quot;username&quot;</span></span><br><span class="line">git config user.email <span class="string">&quot;useremail&quot;</span></span><br></pre></td></tr></table></figure><h4 id="3-将本地仓库和远程仓库连接"><a href="#3-将本地仓库和远程仓库连接" class="headerlink" title="3. 将本地仓库和远程仓库连接"></a>3. 将本地仓库和远程仓库连接</h4><p>利用前文建立好的 SSH，和远程仓库连接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add origin git@newgithub:yourName/yourRepo.git</span><br></pre></td></tr></table></figure><p>其中，yourName是 GitHub 的用户名，yourRepo 是 相连的用户名。</p><p>可以测试一下是否连接成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote -v</span><br></pre></td></tr></table></figure><p>之后正常操作，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git status <span class="comment"># 查看文件状态</span></span><br><span class="line">$ git add . <span class="comment"># 添加所有文件</span></span><br><span class="line">$ git commit -m <span class="string">&#x27;a new commit&#x27;</span> <span class="comment"># 记录</span></span><br><span class="line">$ git push origin master <span class="comment"># 上传，master是主分支，按情况修改</span></span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://segmentfault.com/a/1190000007466317">git连接github总结</a></li><li><a href="https://www.cnblogs.com/popfisher/p/5731232.html">Windows下Git多账号配置，同一电脑多个ssh-key的管理</a></li><li><a href="https://hui-shao.cn/hexo-git-user/">不想使用全局用户？教你为Hexo博客单独配置指定的git用户</a></li><li><a href="https://blog.csdn.net/christine95/article/details/50753532">如何生成多个ssh并将hexo博客布置到github</a></li><li><a href="https://www.jianshu.com/p/a7a557e235c7">一台电脑使用两个git账号</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;在一台电脑，一个 GitHub 账号的情况下，来搭建 Hexo 博客，只需要按照&lt;a href=&quot;https://doreality.github.io/2021-03-08-blog-around/%E7%AC%ACN%E6%AC%A1%EF%BC%9A%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%88%B0GitHub.html&quot;&gt;第N次：从零搭建Hexo博客并部署到GitHub&lt;/a&gt;中所述，马上就可以解决。&lt;/p&gt;
&lt;p&gt;可是……我又有了一个新的 GitHub 账号，还是这台电脑，要在新账号上搭建一个新的博客（也就是说，要在一台电脑上同时操作两个GitHub账号），就要解决不同的SSH下的远程连接的问题。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Hexo" scheme="https://doreality.github.io/tags/Hexo/"/>
    
    <category term="GitHub" scheme="https://doreality.github.io/tags/GitHub/"/>
    
    <category term="SSH" scheme="https://doreality.github.io/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>第N次：从零搭建Hexo博客并部署到GitHub</title>
    <link href="https://doreality.github.io/2021-03-08-blog-around/%E7%AC%ACN%E6%AC%A1%EF%BC%9A%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%88%B0GitHub.html"/>
    <id>https://doreality.github.io/2021-03-08-blog-around/%E7%AC%ACN%E6%AC%A1%EF%BC%9A%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%88%B0GitHub.html</id>
    <published>2021-03-08T12:15:41.000Z</published>
    <updated>2021-03-09T08:12:01.540Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h2><p>一台电脑<br>一个 GitHub 账号</p><h2 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h2><h3 id="建仓"><a href="#建仓" class="headerlink" title="建仓"></a>建仓</h3><p>github.io</p><h3 id="域名（可选）"><a href="#域名（可选）" class="headerlink" title="域名（可选）"></a>域名（可选）</h3><h3 id="配置-SSH"><a href="#配置-SSH" class="headerlink" title="配置 SSH"></a>配置 SSH</h3><p>ssh-keygen</p><h3 id="本地博客"><a href="#本地博客" class="headerlink" title="本地博客"></a>本地博客</h3><p>hexo </p><h3 id="部署到-GitHub"><a href="#部署到-GitHub" class="headerlink" title="部署到 GitHub"></a>部署到 GitHub</h3><p>git config –global</p><h2 id="写作和其他操作"><a href="#写作和其他操作" class="headerlink" title="写作和其他操作"></a>写作和其他操作</h2><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><p><a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html">使用hexo+github搭建免费个人博客详细教程</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;准备工具&quot;&gt;&lt;a href=&quot;#准备工具&quot; class=&quot;headerlink&quot; title=&quot;准备工具&quot;&gt;&lt;/a&gt;准备工具&lt;/h2&gt;&lt;p&gt;一台电脑&lt;br&gt;一个 GitHub 账号&lt;/p&gt;
&lt;h2 id=&quot;搭建博客&quot;&gt;&lt;a href=&quot;#搭建博客&quot; class=&quot;</summary>
      
    
    
    
    
    <category term="Hexo" scheme="https://doreality.github.io/tags/Hexo/"/>
    
    <category term="GitHub" scheme="https://doreality.github.io/tags/GitHub/"/>
    
  </entry>
  
</feed>
